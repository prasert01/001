getgenv().autofarm = true
getgenv().AutoSkills = true
getgenv().AutoRetry = true
speed = 100
Distance = 5
function tween(target)
    local target = pcall(function() return target.CFrame end) and target.CFrame or target
    game:GetService("TweenService"):Create(game.Players.LocalPlayer.Character.HumanoidRootPart, TweenInfo.new(game.Players.LocalPlayer:DistanceFromCharacter(target.Position)/speed, Enum.EasingStyle.Linear), {CFrame = target*CFrame.new(0,0,Distance)}):Play()
    wait(game.Players.LocalPlayer:DistanceFromCharacter(target.Position)/speed)
end

spawn(function()
    while wait() do
        if autofarm then
            for i,v in pairs(workspace.Folders.Monsters:GetChildren()) do
                if v:FindFirstChild("HumanoidRootPart") and v:FindFirstChildOfClass("Humanoid") and v:FindFirstChildOfClass("Humanoid").Health > 0 then
                    pcall(function()
                        repeat
                            wait()
                            tween(v.HumanoidRootPart.CFrame)
                            for i = 1,4 do
                                game:GetService("ReplicatedStorage").RemoteEvents.MainRemoteEvent:FireServer("UseSkill", {["hrpCFrame"] = v.HumanoidRootPart.CFrame,["attackNumber"] = i}, "BasicAttack")
                            end
                        until not v or not v:IsDescendantOf(workspace.Folders) or v:FindFirstChildOfClass("Humanoid").Health == 0
                    end)
                end
            end
        end
    end
end)
game.RunService.Stepped:Connect(function()
    if autofarm then
        game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
    end
end)

spawn(function()
    while wait() do
        if AutoSkills then
            game:GetService("VirtualInputManager"):SendKeyEvent(true, 49, false, game)
            game:GetService("VirtualInputManager"):SendKeyEvent(false, 49, false, game)
            wait()
            game:GetService("VirtualInputManager"):SendKeyEvent(true, 50, false, game)
            game:GetService("VirtualInputManager"):SendKeyEvent(false, 50, false, game)
            wait()
            game:GetService("VirtualInputManager"):SendKeyEvent(true, 51, false, game)
            game:GetService("VirtualInputManager"):SendKeyEvent(false, 51, false, game)
            wait()
            game:GetService("VirtualInputManager"):SendKeyEvent(true, 52, false, game)
            game:GetService("VirtualInputManager"):SendKeyEvent(false, 52, false, game)
            wait()
            game:GetService("VirtualInputManager"):SendKeyEvent(true, 101, false, game)
            game:GetService("VirtualInputManager"):SendKeyEvent(false, 101, false, game)
            wait()
            game:GetService("VirtualInputManager"):SendKeyEvent(true, 114, false, game)
            game:GetService("VirtualInputManager"):SendKeyEvent(false, 114, false, game)
        end
    end
end)

spawn(function()
    if AutoRetry then 
        while wait() do 
            local args = {
            [1] = "RetryDungeon"
                         }

            game:GetService("ReplicatedStorage").RemoteEvents.MainRemoteEvent:FireServer(unpack(args))
        end
     end
 end)
 
 UICorner.Parent = Activate

OpenClose.Name = "Open/Close"
OpenClose.Parent = Rice
OpenClose.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
OpenClose.Position = UDim2.new(0.283924811, 0, 0.0, 0)
OpenClose.Size = UDim2.new(0, 247, 0, 35)
OpenClose.Font = Enum.Font.GothamBold
OpenClose.Text = "เปิด/ปิด หน้าจอ ระบบป้องกัน เด้งออกจากเกมส์"
OpenClose.TextColor3 = Color3.fromRGB(255, 255, 255)
OpenClose.TextSize = 14.000

UICorner_2.Parent = OpenClose

local function NERMBF_fake_script() -- OpenClose.LocalScript 
	local script = Instance.new('LocalScript', OpenClose)

	local frame = script.Parent.Parent.Main
	
	script.Parent.MouseButton1Click:Connect(function()
		frame.Visible = not frame.Visible
	end)
end
coroutine.wrap(NERMBF_fake_script)()
